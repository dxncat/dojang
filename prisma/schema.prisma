// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Range {
  id          Int            @id @default(autoincrement())
  nombre      String         @unique
  description String
  usuarios    User[]
  historiales HistoryRange[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  HoursRange  HoursRange[]
  Clase       Clase[]
  Horario     Horario[]
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  published Boolean  @default(true)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HistoryRange {
  id         String    @id @default(uuid())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  range      Range     @relation(fields: [rangeId], references: [id])
  rangeId    Int
  createdAt  DateTime  @default(now())
  finishedAt DateTime?
}

model HoursRange {
  id      String @id @default(uuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  range   Range  @relation(fields: [rangeId], references: [id])
  rangeId Int
  hours   Int    @default(0)
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  name          String
  password      String
  posts         Post[]
  rangoActual   Range?         @relation(fields: [rangoActualId], references: [id])
  rangoActualId Int            @default(1)
  historiales   HistoryRange[]
  horas         HoursRange[]
  image         String?        @default("https://res.cloudinary.com/dixjvn0t7/image/upload/v1742827190/d1h6jxvbw8lkofag5sy6.jpg")
  isAdmin       Boolean        @default(false)
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  Asistencia    Asistencia[]
}

model Clase {
  id          Int          @id @default(autoincrement())
  fecha       DateTime     @default(now())
  duracion    Int
  rango       Range        @relation(fields: [rangoId], references: [id])
  rangoId     Int
  asistencias Asistencia[]
}

model Asistencia {
  id       Int     @id @default(autoincrement())
  alumno   User    @relation(fields: [alumnoId], references: [id])
  alumnoId String
  clase    Clase   @relation(fields: [claseId], references: [id])
  claseId  Int
  asistio  Boolean @default(false)
}

model Horario {
  id         Int     @id @default(autoincrement())
  rango      Range   @relation(fields: [rangoId], references: [id])
  rangoId    Int
  diaSemana  String
  horaInicio String
  horaFin    String
  status     Boolean @default(true)
}
